# KoproGo - Development Environment
# Usage: docker compose up
# - Backend: http://localhost:8080/api/v1
# - Frontend: http://localhost:3000
# - Hot reload enabled for both backend and frontend

services:
  # Traefik Reverse Proxy (HTTP only for dev)
  traefik:
    image: traefik:v3.0
    container_name: koprogo-traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"  # Dashboard on :8081
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "80:80"      # HTTP
      - "8081:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - koprogo-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: koprogo-postgres
    environment:
      POSTGRES_DB: koprogo_db
      POSTGRES_USER: koprogo
      POSTGRES_PASSWORD: koprogo123
    ports:
      - "5432:5432"  # Exposed for pgAdmin/DBeaver access
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U koprogo -d koprogo_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - koprogo-network

  # Backend (Rust + Actix) with HOT RELOAD via cargo-watch
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: koprogo-backend
    environment:
      DATABASE_URL: postgresql://koprogo:koprogo123@postgres:5432/koprogo_db
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      RUST_LOG: debug
      RUST_BACKTRACE: 1
      ENABLE_RATE_LIMITING: false
    volumes:
      # Hot reload: mount source code
      - ./backend:/app
      - cargo_cache:/usr/local/cargo/registry
      - cargo_git:/usr/local/cargo/git
      - target_cache:/app/target
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - koprogo-network

  # Frontend (Astro + Svelte) with HOT RELOAD
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: koprogo-frontend
    environment:
      PUBLIC_API_URL: http://localhost/api/v1
    volumes:
      # Hot reload: mount source code
      - ./frontend:/app
      - /app/node_modules  # Prevent overwriting node_modules
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=1"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - koprogo-network

volumes:
  postgres_data:
  cargo_cache:
  cargo_git:
  target_cache:

networks:
  koprogo-network:
    driver: bridge
