name: Backend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: koprogo
          POSTGRES_PASSWORD: koprogo123
          POSTGRES_DB: koprogo_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres
        working-directory: backend

      - name: Run migrations
        env:
          DATABASE_URL: postgresql://koprogo:koprogo123@localhost:5432/koprogo_db
        run: sqlx migrate run
        working-directory: backend

      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: backend

      - name: Run Clippy
        env:
          SQLX_OFFLINE: true
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: backend

      - name: Run unit tests
        env:
          SQLX_OFFLINE: true
        run: cargo test --lib
        working-directory: backend

      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://koprogo:koprogo123@localhost:5432/koprogo_db
        run: cargo test --test e2e --test e2e_auth --test e2e_gdpr_audit
        working-directory: backend

      - name: Build project
        env:
          SQLX_OFFLINE: true
        run: cargo build --release
        working-directory: backend
