---
# K3s Agent Role - Install and configure K3s worker nodes

- name: Check if K3s agent is already installed
  stat:
    path: /usr/local/bin/k3s-agent
  register: k3s_agent_binary

- name: Download K3s installation script
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s_install.sh
    mode: '0700'
  when: not k3s_agent_binary.stat.exists

- name: Install K3s agent
  shell: |
    INSTALL_K3S_VERSION="{{ k3s_version | default('v1.28.5+k3s1') }}" \
    K3S_URL="https://{{ hostvars[groups['k3s_control_plane'][0]]['private_ip'] }}:6443" \
    K3S_TOKEN="{{ k3s_node_token_value }}" \
    INSTALL_K3S_EXEC="agent \
      --node-name {{ inventory_hostname }} \
      --node-ip {{ private_ip }} \
      --node-external-ip {{ ansible_host }} \
      --kubelet-arg='--max-pods=250' \
      --kubelet-arg='--kube-reserved=cpu=500m,memory=1Gi,ephemeral-storage=1Gi' \
      --kubelet-arg='--system-reserved=cpu=500m,memory=1Gi,ephemeral-storage=1Gi'" \
    sh /tmp/k3s_install.sh
  when: not k3s_agent_binary.stat.exists
  environment:
    INSTALL_K3S_SKIP_START: "false"

- name: Ensure K3s agent service is enabled and started
  systemd:
    name: k3s-agent
    enabled: yes
    state: started

- name: Wait for node to be ready
  command: kubectl get nodes {{ inventory_hostname }}
  register: node_status
  until: "'Ready' in node_status.stdout"
  retries: 30
  delay: 10
  delegate_to: "{{ groups['k3s_control_plane'][0] }}"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Label worker nodes
  command: kubectl label nodes {{ inventory_hostname }} node-role.kubernetes.io/worker=true --overwrite
  delegate_to: "{{ groups['k3s_control_plane'][0] }}"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Apply custom node labels
  command: kubectl label nodes {{ inventory_hostname }} {{ item }} --overwrite
  loop: "{{ custom_node_labels | default([]) }}"
  delegate_to: "{{ groups['k3s_control_plane'][0] }}"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  when: custom_node_labels is defined
