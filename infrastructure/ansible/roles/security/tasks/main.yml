---
# Security Role - System hardening and security configuration

- name: Install security packages
  apt:
    name:
      - ufw
      - fail2ban
      - unattended-upgrades
      - apt-listchanges
      - auditd
      - aide
      - rkhunter
      - chkrootkit
    state: present

- name: Configure unattended upgrades
  copy:
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    content: |
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id}:${distro_codename}-security";
          "${distro_id}ESMApps:${distro_codename}-apps-security";
          "${distro_id}ESM:${distro_codename}-infra-security";
      };
      Unattended-Upgrade::AutoFixInterruptedDpkg "true";
      Unattended-Upgrade::MinimalSteps "true";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Automatic-Reboot "false";
    mode: '0644'

- name: Configure SSH hardening
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - { regexp: '^PermitRootLogin', line: 'PermitRootLogin no' }
    - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication no' }
    - { regexp: '^PubkeyAuthentication', line: 'PubkeyAuthentication yes' }
    - { regexp: '^X11Forwarding', line: 'X11Forwarding no' }
    - { regexp: '^MaxAuthTries', line: 'MaxAuthTries 3' }
    - { regexp: '^ClientAliveInterval', line: 'ClientAliveInterval 300' }
    - { regexp: '^ClientAliveCountMax', line: 'ClientAliveCountMax 2' }
    - { regexp: '^Protocol', line: 'Protocol 2' }
  notify: restart_sshd

- name: Configure firewall defaults
  ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Allow SSH
  ufw:
    rule: allow
    port: '22'
    proto: tcp

- name: Allow K3s API (control plane only)
  ufw:
    rule: allow
    port: '6443'
    proto: tcp
  when: "'k3s_control_plane' in group_names"

- name: Allow Kubelet
  ufw:
    rule: allow
    port: '10250'
    proto: tcp

- name: Allow NodePort range
  ufw:
    rule: allow
    port: '30000:32767'
    proto: tcp

- name: Allow HTTP/HTTPS
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - '80'
    - '443'

- name: Configure fail2ban
  copy:
    dest: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime = 3600
      findtime = 600
      maxretry = 5
      destemail = ops@koprogo.io
      sender = fail2ban@koprogo.io

      [sshd]
      enabled = true
      port = ssh
      logpath = /var/log/auth.log
      maxretry = 3
    mode: '0644'
  notify: restart_fail2ban

- name: Enable and start fail2ban
  systemd:
    name: fail2ban
    enabled: yes
    state: started

- name: Enable auditd
  systemd:
    name: auditd
    enabled: yes
    state: started

- name: Configure audit rules
  copy:
    dest: /etc/audit/rules.d/koprogo.rules
    content: |
      # Log all commands executed
      -a exit,always -F arch=b64 -S execve -k exec

      # Log changes to system configuration
      -w /etc/passwd -p wa -k identity
      -w /etc/group -p wa -k identity
      -w /etc/shadow -p wa -k identity
      -w /etc/sudoers -p wa -k actions
      -w /etc/ssh/sshd_config -p wa -k sshd

      # Log network configuration changes
      -w /etc/hosts -p wa -k network
      -w /etc/network/ -p wa -k network

      # K3s related
      -w /var/lib/rancher/ -p wa -k k3s
      -w /etc/rancher/ -p wa -k k3s
    mode: '0600'
  notify: restart_auditd

- name: Set secure file permissions
  file:
    path: "{{ item }}"
    mode: '0600'
  loop:
    - /etc/ssh/sshd_config
    - /etc/shadow
    - /etc/gshadow

- name: Disable unnecessary services
  systemd:
    name: "{{ item }}"
    enabled: no
    state: stopped
  loop:
    - bluetooth
    - cups
  ignore_errors: yes
