#!/bin/bash
# Script simplifi√© pour copier les vid√©os E2E
set -e

echo "üìπ Copie des vid√©os Playwright ‚Üí docs/_static/videos/"

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
TEST_RESULTS="$PROJECT_ROOT/frontend/test-results"
VIDEOS_DIR="$PROJECT_ROOT/docs/_static/videos"

# Cr√©er le r√©pertoire si n√©cessaire
mkdir -p "$VIDEOS_DIR"

# V√©rifier si des vid√©os existent
if [ ! -d "$TEST_RESULTS" ]; then
    echo "‚ùå R√©pertoire test-results non trouv√©"
    echo "üí° Lancez d'abord: cd frontend && npm run test:e2e"
    exit 1
fi

VIDEO_COUNT=$(find "$TEST_RESULTS" -name "video.webm" 2>/dev/null | wc -l)
if [ "$VIDEO_COUNT" -eq 0 ]; then
    echo "‚ö†Ô∏è  Aucune vid√©o trouv√©e"
    echo "üí° Lancez d'abord: cd frontend && npm run test:e2e"
    exit 0
fi

# Nettoyer les anciennes vid√©os
rm -f "$VIDEOS_DIR"/*.webm

# Copier les vid√©os avec des noms bas√©s sur le r√©pertoire de test
counter=0
while IFS= read -r video_path; do
    # Extraire le nom du r√©pertoire parent (contient le nom du test)
    dir_name=$(basename "$(dirname "$video_path")")
    # Nettoyer le suffixe -chromium
    clean_name="${dir_name%-chromium}"

    # Copier
    cp "$video_path" "$VIDEOS_DIR/${clean_name}.webm"
    counter=$((counter+1))
done < <(find "$TEST_RESULTS" -name "video.webm")

echo "‚úÖ $counter vid√©os copi√©es dans docs/_static/videos/"
echo ""
echo "üîÑ R√©g√©n√©ration de la page RST..."
python3 "$PROJECT_ROOT/.claude/scripts/generate-video-rst.py"

echo ""
echo "‚úÖ Termin√© ! Les vid√©os sont pr√™tes pour la documentation."
echo "üí° Prochaine √©tape: cd docs && make html"
